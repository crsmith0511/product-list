      <form onSubmit={this.onFormSubmit} className="input-group" style={{margin: "10px"}}>
        <input
          placeholder="search"
          className="form-control"
          value={this.state.term}
          onChange={this.onInputChange}
        />
        <span className="input-group-btn">
          <button type="submit" className="btn btn-secondary">
            Submit
          </button>
        </span>
      </form>
      <select className="custom-select" id="inputGroupSelect04" aria-label="Example select with button addon">
        <option selected>Choose...</option>
        <option value="1">One</option>
        <option value="2">Two</option>
        <option value="3">Three</option>
      </select>
      <div className="input-group-append">
        <button type="submit" className="btn btn-secondary">Submit</button>
      </div>
      <select className="custom-select" id="inputGroupSelect04" aria-label="Example select with button addon">
        <option selected>Choose...</option>
        <option value="1">One</option>
        <option value="2">Two</option>
        <option value="3">Three</option>
      </select>
      <div className="input-group-append">
      <button type="submit" className="btn btn-secondary">Submit</button>
      </div>


      import React, { Component } from "react";
import { connect } from "react-redux";
import { Link } from "react-router-dom";
import _ from "lodash";
import moment from "moment"

class ConcertsList extends Component {

	renderList() {
		console.log('inside concertList', this.props.city)
		return _.map(this.props.city, currentConcert => {
			return (
			<tr key={currentConcert.id}>
				<td key={currentConcert.id}>
					<img src={currentConcert.images[0].url} style={{width: "50px", height: "50px"}} />
				</td>
				<td>
					<div>{moment(currentConcert.dates.start.localDate).format('MMM-DD')}</div>
					<div>{moment(currentConcert.dates.start.dateTime).format("ddd, hh:mm A")}</div>
				</td>
				<td>
					<div style={{fontWeight: "bold"}}>{currentConcert.name}</div>
					<div>{currentConcert._embedded.venues[0].name}</div>
				</td>
				<td>
					<div>{currentConcert._embedded.venues[0].city.name}</div>
					<div>{currentConcert._embedded.venues[0].state.stateCode}</div>
				</td>
				<td>
					<Link to={`/concerts/${currentConcert.id}`}>
						<button type="button" className="btn btn-primary">See Details</button>
					</Link>
					
				</td>
			</tr>
			);
	    }); 
	}

  render() {
    return (
    	<div>
			<table className="table" style={{ margin: "0px auto", width: "50%"}}>
				<thead>
					<tr>
						<th style={{textAlign: "center", fontSize: "20px"}}>Concert List</th>
					</tr>
				</thead>
				<tbody>
					<tr>{this.renderList()}</tr>
				</tbody>
			</table>
			<Link to='/'>Back to Search</Link>
    	</div>
    );
  }
}

function mapStateToProps( state ) {
  return{
	city: state.city
  } 
}


export default connect(mapStateToProps)(ConcertsList);




import React, { Component } from 'react';
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { fetchCategory } from '../actions/index';


class Category extends Component {
  constructor(props) {
    super(props);

    this.state = { 
      category: 'Baby',
      // price: ''
    };

    this.onCategoryChange = this.onCategoryChange.bind(this);
    this.onCategoryClick = this.onCategoryClick.bind(this);

    // this.onPriceChange = this.onPriceChange.bind(this);
    // this.onPriceClick = this.onPriceClick.bind(this);
  }

  onCategoryChange(event) {
    console.log(event.target.value)
    this.setState({ category: event.target.value });
    event.preventDefault();
    console.log(event)
    this.props.fetchCategory(this.state.category);
    this.setState({ category: ''});
  }

  onCategoryClick(event) {
    console.log(event.target.value)
    this.setState({ category: event.target.value });
    event.preventDefault();
    console.log(event)
    this.props.fetchCategory(this.state.category);
    this.setState({ category: 'Baby'});
    // event.preventDefault();
    // console.log(event)
    // this.props.fetchCategory(this.state.category);
    // this.setState({ category: ''});
  }


  render() {
    return (
      <div className="row row-cols-3 w-75 p-3" style={{flexWrap: "nowrap"}}>
        <form className="input-group form-control-sm" style={{margin: "10px", padding: "0px"}}>
          <label className="col-form-label" style={{paddingRight: "5px", paddingLeft: "30px"}}>Search</label>
          <input className="form-control form-control-sm" id="inputSearch"/>
        </form>
        <form className="input-group" style={{margin: "10px"}}>
        <select onClick={this.onCategoryClick} value={this.state.category} className="form-control form-control-sm">
            <option onChange={this.onCategoryChange} value={this.state.category} value="Baby">Baby</option>
            <option value="Garden">Garden</option>
        </select>
        </form>
        <form  className="input-group" style={{margin: "10px"}}>
        <select className="form-control form-control-sm">
            <option value="Highest">Highest to Lowest</option>
            <option value="Lowest">Lowest to Highest</option>
        </select>
        </form>
      </div>
    );
  }
}

function mapDispatchToProps(dispatch) {
  return bindActionCreators({ fetchCategory }, dispatch);
}

export default connect(
  null,
  mapDispatchToProps
)(Category);

// onClick={this.onPriceClick}
// onChange={this.onPriceChange} value={this.state.price}




renderList() {
    console.log('inside concertList', this.props.category)
    return _.map(this.props.city, currentConcert => {
        return (
        <tr key={currentConcert.id}>
            <td key={currentConcert.id}>
                <img src={currentConcert.images[0].url} style={{width: "50px", height: "50px"}} />
            </td>
            <td>
                {/* <div>{moment(currentConcert.dates.start.localDate).format('MMM-DD')}</div>
                <div>{moment(currentConcert.dates.start.dateTime).format("ddd, hh:mm A")}</div> */}
            </td>
            <td>
                <div style={{fontWeight: "bold"}}>{currentConcert.name}</div>
                <div>{currentConcert._embedded.venues[0].name}</div>
            </td>
            <td>
                <div>{currentConcert._embedded.venues[0].city.name}</div>
                <div>{currentConcert._embedded.venues[0].state.stateCode}</div>
            </td>
        </tr>
        );
    }); 
}

  render() {
    return (
      <table className="table table-hover">
        <thead>
          <tr>
          </tr>
        </thead>
        {/* <tbody>{this.renderList()}</tbody> */}
      </table>
    );
  }
}